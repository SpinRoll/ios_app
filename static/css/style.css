:root {
    --ios-blue: #007AFF;
    --ios-background: #000000;
    --ios-text: #FFFFFF;
    --ios-secondary-text: rgba(255, 255, 255, 0.6);
    --ios-button-height: 50px;
    --modal-border-radius: 12px;
    --modal-padding: 16px;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    -webkit-tap-highlight-color: transparent;
}

@keyframes slideUp {
    from { 
        transform: translateY(100%);
        opacity: 0;
    }
    to { 
        transform: translateY(0);
        opacity: 1;
    }
}

@keyframes slideDown {
    from { 
        transform: translateY(0);
        opacity: 1;
    }
    to { 
        transform: translateY(100%);
        opacity: 0;
    }
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes scaleIn {
    from { transform: scale(0.95); opacity: 0; }
    to { transform: scale(1); opacity: 1; }
}

@keyframes iconPulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
}

body {
    font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Text', 'Helvetica Neue', sans-serif;
    background-color: var(--ios-background);
    color: var(--ios-text);
    min-height: 100vh;
    overflow: hidden;
}

.header {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    height: 44px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 16px;
    z-index: 10;
}

.back-button, .cancel-button {
    color: var(--ios-blue);
    font-size: 17px;
    font-weight: 400;
    cursor: pointer;
    display: none;
    align-items: center;
    gap: 4px;
    opacity: 0;
    animation: fadeIn 0.3s forwards;
}

.back-button:active, .cancel-button:active {
    opacity: 0.7;
}

.back-arrow {
    width: 12px;
    height: 12px;
    border-left: 2px solid var(--ios-blue);
    border-bottom: 2px solid var(--ios-blue);
    transform: rotate(45deg);
    margin-right: 4px;
}

.modal-container {
    height: 100vh;
    position: relative;
    overflow: hidden;
}

.modal {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    display: none;
    opacity: 0;
}

.modal.active {
    display: block;
    animation: slideUp 0.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.modal.exit {
    display: block;
    animation: slideDown 0.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.modal-content {
    background-color: rgba(28, 28, 30, 0.95);
    border-radius: var(--modal-border-radius) var(--modal-border-radius) 0 0;
    padding: var(--modal-padding);
    height: 100%;
    margin: 60px 0 0 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    position: relative;
    overflow: hidden;
}

.screen-background {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
    max-height: 50vh;
    background-size: cover;
    background-position: center center;
    opacity: 0.15;
    z-index: -1;
    filter: blur(20px);
}

#screen1 .screen-background {
    background: linear-gradient(145deg, rgba(0, 0, 0, 0.95), rgba(26, 26, 26, 0.95));
}

#screen2 .screen-background {
    background: linear-gradient(145deg, rgba(0, 0, 0, 0.95), rgba(26, 26, 26, 0.85), rgba(0, 122, 255, 0.1));
}

#screen3 .screen-background {
    background: linear-gradient(145deg, rgba(0, 0, 0, 0.95), rgba(26, 26, 26, 0.85), rgba(128, 128, 128, 0.1));
}

h1 {
    font-size: 32px;
    font-weight: 700;
    margin: 24px 0;
    line-height: 1.2;
    animation: fadeIn 0.6s 0.2s both;
}

h2 {
    font-size: 26px;
    font-weight: 600;
    margin: 20px 0;
    animation: fadeIn 0.6s 0.2s both;
}

.description {
    font-size: 17px;
    line-height: 1.4;
    color: var(--ios-secondary-text);
    margin-bottom: 16px;
    padding: 0 16px;
    animation: fadeIn 0.6s 0.3s both;
}

.sub-description {
    font-size: 15px;
    color: var(--ios-secondary-text);
    margin-bottom: 24px;
    padding: 0 16px;
    animation: fadeIn 0.6s 0.4s both;
}

.ios-button {
    width: calc(100% - 32px);
    height: var(--ios-button-height);
    background-color: var(--ios-blue);
    border: none;
    border-radius: 12px;
    color: white;
    font-size: 17px;
    font-weight: 600;
    margin-top: auto;
    margin-bottom: 48px;
    margin-left: 16px;
    cursor: pointer;
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    animation: scaleIn 0.6s 0.5s both;
    will-change: transform;
}

.ios-button:active {
    transform: scale(0.98);
    opacity: 0.9;
}

.footer-text {
    font-size: 12px;
    color: var(--ios-secondary-text);
    padding: 0 16px;
    margin-bottom: 16px;
    animation: fadeIn 0.6s 0.6s both;
}

.icon-container {
    width: 100px;
    height: 100px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-top: 32px;
    animation: scaleIn 0.6s 0.1s both;
}

.screen-icon {
    width: 48px;
    height: 48px;
    animation: iconPulse 2s infinite ease-in-out;
}

.pagination {
    position: fixed;
    bottom: 16px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 8px;
    z-index: 1000;
    animation: fadeIn 0.6s 0.7s both;
}

.dot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.3);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.dot.active {
    background-color: var(--ios-text);
    transform: scale(1.2);
}

.setting-option {
    width: 100%;
    padding: 16px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    display: flex;
    align-items: flex-start;
    gap: 16px;
    margin: 16px 0;
    animation: scaleIn 0.6s 0.4s both;
    transition: transform 0.3s ease;
}

.setting-icon {
    width: 24px;
    height: 24px;
    background: var(--ios-blue);
    border-radius: 6px;
    flex-shrink: 0;
}

.setting-text {
    text-align: left;
    flex: 1;
}

.setting-subtext {
    font-size: 14px;
    color: var(--ios-secondary-text);
    margin-top: 4px;
    line-height: 1.4;
}

.ios-toggle {
    position: relative;
    width: 52px;
    height: 32px;
    margin-left: auto;
    flex-shrink: 0;
}

.ios-toggle input {
    opacity: 0;
    width: 0;
    height: 0;
}

.ios-toggle-slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(120, 120, 128, 0.32);
    transition: .4s;
    border-radius: 34px;
}

.ios-toggle-slider:before {
    position: absolute;
    content: "";
    height: 28px;
    width: 28px;
    left: 2px;
    bottom: 2px;
    background-color: white;
    transition: .4s;
    border-radius: 50%;
    box-shadow: 0 3px 8px rgba(0, 0, 0, 0.15);
}

.ios-toggle input:checked + .ios-toggle-slider {
    background-color: var(--ios-blue);
}

.ios-toggle input:checked + .ios-toggle-slider:before {
    transform: translateX(20px);
}

.ios-status-bar {
    height: 44px;
    padding: 0 16px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-weight: 600;
    font-size: 14px;
    animation: fadeIn 0.5s ease-out;
}

.status-icons {
    display: flex;
    gap: 6px;
    align-items: center;
}

.signal {
    width: 18px;
    height: 12px;
    background: #fff;
    position: relative;
    clip-path: polygon(0 100%, 0 40%, 20% 40%, 20% 30%, 40% 30%, 40% 20%, 60% 20%, 60% 10%, 80% 10%, 80% 0, 100% 0, 100% 100%);
}

.wifi {
    width: 16px;
    height: 12px;
    position: relative;
    display: inline-block;
}

.wifi:before {
    content: '';
    position: absolute;
    width: 16px;
    height: 16px;
    border: 2px solid #fff;
    border-radius: 50%;
    clip-path: polygon(0 0, 100% 0, 100% 50%, 0 50%);
    transform: rotate(45deg);
}

.battery {
    width: 24px;
    height: 12px;
    border: 1px solid #fff;
    border-radius: 3px;
    padding: 1px;
    display: flex;
    align-items: center;
}

.battery:after {
    content: '';
    display: block;
    width: 80%;
    height: 100%;
    background: #fff;
    border-radius: 1px;
}

.battery:before {
    content: '';
    position: absolute;
    right: -4px;
    width: 2px;
    height: 4px;
    background: #fff;
    border-radius: 0 2px 2px 0;
}

/* JavaScript part */

const modalContainer = document.querySelector('.modal-container');
const modal = document.querySelector('.modal');
const modalContent = document.querySelector('.modal-content');
const screens = document.querySelectorAll('.screen');

let currentScreen = 0;

// Function to open the modal
function openModal() {
  modal.classList.add('active');
  modalContainer.style.overflow = 'hidden';
}

// Function to close the modal
function closeModal() {
  modal.classList.remove('active');
  modal.classList.add('exit');
  setTimeout(() => {
    modal.classList.remove('exit');
    modalContainer.style.overflow = 'auto';
  }, 500); // 500ms delay for the exit animation
}

// Function to move to the next screen
function nextScreen() {
  if (currentScreen < screens.length - 1) {
    currentScreen++;
    screens[currentScreen - 1].style.display = 'none';
    screens[currentScreen].style.display = 'flex';
    updatePagination();
  }
}

// Function to move to the previous screen
function previousScreen() {
  if (currentScreen > 0) {
    currentScreen--;
    screens[currentScreen + 1].style.display = 'none';
    screens[currentScreen].style.display = 'flex';
    updatePagination();
  }
}

// Function to update the pagination dots
function updatePagination() {
  const dots = document.querySelectorAll('.dot');
  dots.forEach((dot, index) => {
    if (index === currentScreen) {
      dot.classList.add('active');
    } else {
      dot.classList.remove('active');
    }
  });
}

// Event listeners for the buttons
const nextButton = document.getElementById('nextButton');
const prevButton = document.getElementById('prevButton');
const closeButton = document.querySelector('.close-button');

if (nextButton) {
  nextButton.addEventListener('click', nextScreen);
}

if (prevButton) {
  prevButton.addEventListener('click', previousScreen);
}

if (closeButton) {
  closeButton.addEventListener('click', closeModal);
}

// Event listener for the modal container
modalContainer.addEventListener('click', (event) => {
  if (event.target === modalContainer) {
    closeModal();
  }
});

// Event listener for the modal content
modalContent.addEventListener('click', (event) => {
  event.stopPropagation(); // Prevent the event from bubbling up to the modal container
});

// Initial setup
screens[currentScreen].style.display = 'flex';
updatePagination();

openModal();